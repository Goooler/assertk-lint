name: publish

on:
  workflow_dispatch:
  release:
    types: [ released ]

env:
  SIGNING_KEY_RING_FILE: "${RUNNER_TEMP}/key.gpg"

jobs:
  publish:
    name: Release build and publish
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Patch Changelog
        run: |
          ./gradlew patchChangelog --release-note="`cat << EOM
          ${{ github.event.release.body }}
          EOM`"

      - name: Create binary keyring
        env:
          GPG_KEY_CONTENTS: ${{ secrets.SIGNING_KEY_SECRET }}
          SIGNING_KEY_RING_FILE: ${{ secrets.SIGNING_KEY_FILE_PATH }}
        run: |
          git fetch --unshallow
          sudo bash -c "echo '$GPG_KEY_CONTENTS' | base64 -d > '$SIGNING_KEY_RING_FILE'"

      - name: Publish to MavenCentral
        run: ./gradlew -Psigning.keyId=${{ secrets.SIGNING_KEY_ID}} \
          -Psigning.password=${{ secrets.SIGNING_KEY_PASSWORD }} \
          -Psigning.secretKeyRingFile=${{ secrets.SIGNING_KEY_FILE_PATH }} \
          --no-configuration-cache \
          publish closeAndReleaseRepository
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.OSSRH_PASSWORD }}
          SONATYPE_PROFILE_ID: ${{ secrets.SONATYPE_PROFILE_ID }}

      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION="${{ github.event.release.tag_name }}"
          BRANCH="changelog-update-$VERSION"
          git config user.email "action@github.com"
          git config user.name "GitHub Action"
          git checkout -b $BRANCH
          git commit -am "Changelog update - $VERSION"
          git push --set-upstream origin $BRANCH
          gh pr create \
            --title "Changelog update - \`$VERSION\`" \
            --body "Current pull request contains patched \`changelog.md\` file for the \`$VERSION\` version." \
            --base master \
            --head $BRANCH
